# -*- mode: ruby -*-
# vi: set ft=ruby :

require vagrant-libvirt

Vagrant.configure('2') do |config|
  # Example configuration of new VM..
  config.vm.define :flame_checker do |vagrant_host|
    # Box name
    vagrant_host.vm.box = 'gildub/fedora20'
    vagrant_host.vm.hostname = "flame-checker"

    # Domain Specific Options
    vagrant_host.vm.provider :libvirt do |domain|
      domain.memory = 2048
      domain.cpus = 1
    end
    
    vagrant_host.vm.provision 'shell', inline: "sudo yum -y install bash-completion bind-utils setroubleshoot python-pip system-storage-manager"
    vagrant_host.vm.provision 'shell', inline: "sudo yum -y groupinstall 'Development Tools'"    
    vagrant_host.vm.provision 'shell', inline: "sudo systemctl enable libvirtd && sudo systemctl start libvirtd"    
    vagrant_host.vm.provision 'shell', inline: "sudo yum -y install docker"
    vagrant_host.vm.provision 'shell', inline: "sudo systemctl stop docker" #in case this isn't first run
    vagrant_host.vm.provision 'shell', inline: "sudo groupadd docker > /dev/null 2>&1 || : "
    vagrant_host.vm.provision 'shell', inline: "sudo usermod -a -G docker vagrant"
    vagrant_host.vm.provision 'shell', inline: "git config --global user.email 'langdon@fedoraproject.org'"
    vagrant_host.vm.provision 'shell', inline: "git config --global user.name 'langdon'"
    vagrant_host.vm.provision 'shell', inline: "mv /vagrant/github-id_rsa ~/.ssh/"
    vagrant_host.vm.provision 'shell', inline: "/vagrant/config ~/.ssh/"
    vagrant_host.vm.provision 'shell', inline: "sudo systemctl enable docker && sudo systemctl start docker"
    vagrant_host.vm.provision 'shell', inline: "sudo chown root:docker /var/run/docker.sock"
    
  end
  
  config.vm.synced_folder '/home/lwhite/loc-projects', '/mnt/host-projects', type: 'nfs'
                          
  # Options for libvirt vagrant provider.
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = 'kvm'
    libvirt.connect_via_ssh = false
    libvirt.username = 'root'
    libvirt.storage_pool_name = 'mnt_vms'
  end
end

